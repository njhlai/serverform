#!/bin/sh

### Parameters ###
logfile="{{ logfile }}"
{% if reporting_email %}
email="{{ reporting_email }}"
{% endif %}
{% if hcio_ping %}
ping="{{ hcio_ping }}"
{% endif %}
subject="SMART Status Report for Drives in {{ ansible_hostname }}"
drives="{{ disks | map(attribute='name') | join(' ') }}"
tempWarn={{ temp_warn }}
tempCrit={{ temp_crit }}
sectorsCrit={{ sectors_crit }}
testAgeWarn={{ test_age_warn }}
warnSymbol="?"
critSymbol="!"

{% if reporting_email %}
### Set email headers ###
(
    echo "To: ${email}"
    echo "Subject: ${subject}"
    echo "Content-Type: text/html"
    echo "MIME-Version: 1.0"
    echo -e "\r\n"
) >> "$logfile"

### Set email body ###
(
    echo "<pre style=\"font-size:14px\">"
    echo ""
) >> "$logfile"

{% endif %}
###### summary ######
(
    echo "########## ${subject} ##########"
    echo ""
    echo "+-----------------+----+-----+-----+-----+-------+-------+--------+------+------+------+-------+----+"
    echo "|Serial           |Temp|Power|Start|Spin |ReAlloc|Current|Offline |UDMA  |Seek  |High  |Command|Last|"
    echo "|                 |    |On   |Stop |Retry|Sectors|Pending|Uncorrec|CRC   |Errors|Fly   |Timeout|Test|"
    echo "|                 |    |Hours|Count|Count|       |Sectors|Sectors |Errors|      |Writes|Count  |Age |"
    echo "+-----------------+----+-----+-----+-----+-------+-------+--------+------+------+------+-------+----+"
) >> "$logfile"
for drive in $drives
do
    (
        /usr/sbin/smartctl -A -i -v 7,hex48 /dev/disk/by-id/ata-"$drive"-part1 | \
        awk -v tempWarn="$tempWarn" -v tempCrit="$tempCrit" -v sectorsCrit="$sectorsCrit" \
        -v testAgeWarn="$testAgeWarn" -v warnSymbol="$warnSymbol" -v critSymbol="$critSymbol" \
        -v lastTestHours="$(/usr/sbin/smartctl -l selftest /dev/disk/by-id/ata-"$drive"-part1 | grep "# 1" | awk '{print $9}')" '\
        /Serial Number:/{serial=$3} \
        /Temperature_Celsius/{temp=$10} \
        /Power_On_Hours/{onHours=$10} \
        /Start_Stop_Count/{startStop=$10} \
        /Spin_Retry_Count/{spinRetry=$10} \
        /Reallocated_Sector/{reAlloc=$10} \
        /Current_Pending_Sector/{pending=$10} \
        /Offline_Uncorrectable/{offlineUnc=$10} \
        /UDMA_CRC_Error_Count/{crcErrors=$10} \
        /Seek_Error_Rate/{seekErrors=("0x" substr($10,3,4));totalSeeks=("0x" substr($10,7))} \
        /High_Fly_Writes/{hiFlyWr=$10} \
        /Command_Timeout/{cmdTimeout=$10} \
        END {
            testAge=sprintf("%.0f", (onHours - lastTestHours) / 24);
            if (temp > tempCrit || reAlloc > sectorsCrit || pending > sectorsCrit || offlineUnc > sectorsCrit)
                serial=serial " " critSymbol;
            else if (temp > tempWarn || reAlloc > 0 || pending > 0 || offlineUnc > 0 || testAge > testAgeWarn)
                serial=serial " " warnSymbol;
            seekErrors=sprintf("%d", seekErrors);
            totalSeeks=sprintf("%d", totalSeeks);
            if (totalSeeks == "0") {
                seekErrors="N/A";
                totalSeeks="N/A";
            }
            if (hiFlyWr == "") hiFlyWr="N/A";
            if (cmdTimeout == "") cmdTimeout="N/A";
            printf "|%-17s| %2s |%5s|%5s|%5s|%7s|%7s|%8s|%6s|%6s|%6s|%7s|%4s|\n",
            serial, temp, onHours, startStop, spinRetry, reAlloc, pending, offlineUnc, \
            crcErrors, seekErrors, hiFlyWr, cmdTimeout, testAge;
        }'
    ) >> "$logfile"
done
(
    echo "+-----------------+----+-----+-----+-----+-------+-------+--------+------+------+------+-------+----+"
) >> "$logfile"

###### for each drive ######
for drive in $drives
do
    brand="$(/usr/sbin/smartctl -i /dev/disk/by-id/ata-"$drive"-part1 | grep "Model Family" | awk '{print $3, $4, $5}')"
    serial="$(/usr/sbin/smartctl -i /dev/disk/by-id/ata-"$drive"-part1 | grep "Serial Number" | awk '{print $3}')"
    (
        echo ""
        echo "########## SMART status report for ${drive} drive (${brand}: ${serial}) ##########"
        /usr/sbin/smartctl -H -A -l error /dev/disk/by-id/ata-"$drive"-part1
        /usr/sbin/smartctl -l selftest /dev/disk/by-id/ata-"$drive"-part1 | grep "# 1 \|Num" | cut -c6-
    ) >> "$logfile"
done
sed -i -e '/smartctl 6./d' "$logfile"
sed -i -e '/Copyright/d' "$logfile"
sed -i -e '/=== START OF READ/d' "$logfile"
sed -i -e '/SMART Attributes Data/d' "$logfile"
sed -i -e '/Vendor Specific SMART/d' "$logfile"
sed -i -e '/SMART Error Log Version/d' "$logfile"
{% if reporting_email %}
(
    echo ""
    echo "</pre>"
) >> "$logfile"
{% endif %}

### Send report ###
{% if reporting_email %}
sendmail -t < "$logfile"
{% endif %}
{% if hcio_ping %}
curl -fsS -m 10 --retry 5 --data-binary "@$logfile" "$ping"
{% endif %}
rm "$logfile"